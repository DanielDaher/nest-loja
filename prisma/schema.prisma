// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Security {
  id            Int       @id @default(autoincrement())
  credential    String    @unique @db.VarChar(512)
  code          String?   @db.VarChar(32)
  codeExpiresIn DateTime? @db.DateTime(0)
  validated     Boolean   @default(false)
}

model Permission {
  id     Int         @id @default(autoincrement())
  title  Permissions @unique
  admins Admin[]
}

model Admin {
  id            Int           @id @default(autoincrement())
  role          AccountRole   @default(ADMIN)
  cpf           String        @unique @db.VarChar(14)
  name          String        @db.VarChar(512)
  email         String        @unique @db.VarChar(512)
  password      String        @db.Text
  status        AccountStatus
  imageUrl      String?       @db.Text
  code          String?       @db.VarChar(32)
  codeExpiresIn DateTime?     @db.DateTime(0)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  permissions   Permission[]
}

model User {
  id        Int           @id @default(autoincrement())
  role      AccountRole   @default(USER)
  name      String
  email     String        @unique
  password  String        @db.Text
  cpf       String        @unique
  phone     String        @db.VarChar(256)
  imageUrl  String?       @db.VarChar(500)
  status    AccountStatus @default(ACTIVE)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  addresses Address[]
  documents Document[]
  payments  Payment[]
}

model Address {
  id         Int      @id @default(autoincrement())
  userId     Int
  zipcode    String
  street     String
  number     String
  complement String?
  district   String
  city       String
  state      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
}

model Document {
  id        Int      @id @default(autoincrement())
  userId    Int
  fileUrl   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Payment {
  id             Int           @id @default(autoincrement())
  userId         Int
  bankName       String
  bankAccount    String
  agency         String
  value          Float
  method         PaymentMethod @default(PIX)
  dueDate        DateTime
  type           PaymentType   @default(MONTHLY)
  parcelQuantity Int           @default(1)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  user           User          @relation(fields: [userId], references: [id])
}

enum AccountStatus {
  ACTIVE
  INACTIVE
}

enum AccountRole {
  ADMIN
  USER
}

enum PaymentMethod {
  PIX
  CREDIT_CARD
  MONEY
}

enum PaymentType {
  MONTHLY
  DAILY
  YEARLY
}

enum Permissions {
  dashboard
  usuarios
  pedidos
  financeiro
  configuracoes
  faqs
  textos
}
